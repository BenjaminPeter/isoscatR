load("Desktop/isotopesgenetics/Analysis/Results/HETH_mcmc.Rdata")
ls()
str(m)
setwd("Desktop/isotopesgenetics/Analysis/")
ls
setwd('/Users/rundel/Desktop/isotopesgenetics/Analysis')
pdf( paste("Results/",sp,"_mcmc",suff,".pdf",sep="") )#
for(i in 1:length(m)) {#
#
    thin = niter(m[[i]])/pts  #
    w=window(m[[i]],thin=thin )#
#
    plot_mcmc(w,)#
}#
dev.off()#
#
pdf(paste("Results/",sp,"_autocorr",suff,".pdf",sep=""))#
for(i in 1:length(m)) {#
#
    thin = niter(m[[i]])/pts  #
    w=window(m[[i]],thin=thin )#
#
    for(i in 1:length(w)) #
        autocorr.plot(w[[i]],ac.lag)#
}#
dev.off()
library(Rscat)
setwd('/Users/rundel/Desktop/isotopesgenetics/Analysis')
pdf( paste("Results/",sp,"_mcmc",suff,".pdf",sep="") )#
for(i in 1:length(m)) {#
#
    thin = niter(m[[i]])/pts  #
    w=window(m[[i]],thin=thin )#
#
    plot_mcmc(w,)#
}#
dev.off()#
#
pdf(paste("Results/",sp,"_autocorr",suff,".pdf",sep=""))#
for(i in 1:length(m)) {#
#
    thin = niter(m[[i]])/pts  #
    w=window(m[[i]],thin=thin )#
#
    for(i in 1:length(w)) #
        autocorr.plot(w[[i]],ac.lag)#
}#
dev.off()
sp="HETH"
suff=""
pdf( paste("Results/",sp,"_mcmc",suff,".pdf",sep="") )#
for(i in 1:length(m)) {#
#
    thin = niter(m[[i]])/pts  #
    w=window(m[[i]],thin=thin )#
#
    plot_mcmc(w,)#
}#
dev.off()#
#
pdf(paste("Results/",sp,"_autocorr",suff,".pdf",sep=""))#
for(i in 1:length(m)) {#
#
    thin = niter(m[[i]])/pts  #
    w=window(m[[i]],thin=thin )#
#
    for(i in 1:length(w)) #
        autocorr.plot(w[[i]],ac.lag)#
}#
dev.off()
pts=1000
pdf( paste("Results/",sp,"_mcmc",suff,".pdf",sep="") )#
for(i in 1:length(m)) {#
#
    thin = niter(m[[i]])/pts  #
    w=window(m[[i]],thin=thin )#
#
    plot_mcmc(w,)#
}#
dev.off()#
#
pdf(paste("Results/",sp,"_autocorr",suff,".pdf",sep=""))#
for(i in 1:length(m)) {#
#
    thin = niter(m[[i]])/pts  #
    w=window(m[[i]],thin=thin )#
#
    for(i in 1:length(w)) #
        autocorr.plot(w[[i]],ac.lag)#
}#
dev.off()
ac.lag=500
pdf( paste("Results/",sp,"_mcmc",suff,".pdf",sep="") )#
for(i in 1:length(m)) {#
#
    thin = niter(m[[i]])/pts  #
    w=window(m[[i]],thin=thin )#
#
    plot_mcmc(w,)#
}#
dev.off()#
#
pdf(paste("Results/",sp,"_autocorr",suff,".pdf",sep=""))#
for(i in 1:length(m)) {#
#
    thin = niter(m[[i]])/pts  #
    w=window(m[[i]],thin=thin )#
#
    for(i in 1:length(w)) #
        autocorr.plot(w[[i]],ac.lag)#
}#
dev.off()
setwd('/Users/rundel/Desktop/isotopesgenetics/Analysis')
pdf( paste("Results/",sp,"_cov",suff,".pdf",sep="") )#
plot_cov(m[[1]],seq(0,2000,5), calc_cov_powered_exp)#
dev.off()
traceback
traceback()
length(m[[1]])
i
apply(params[[i]], 2, median)
apply(m[[1]][[i]], 2, median)
ls()
params=m[[1]]
d=seq(0,2000,5)
cov_func = calc_cov_powered_exp
setwd('/Users/rundel/Desktop/isotopesgenetics/Rscat/R')
   #
    if (inherits(params,"mcmc.list")) {#
        nchains = length(m)#
    } else {#
        nchains = 1#
        params = list(params)#
    }#
    #
    #
    ymax = round(2*sum(summary(params)$quantiles[,3]),1)#
    ymax = 4#
    plot(0,0,type='n',xlab="Distance",ylab="cov",xlim=range(d),ylim=c(0,ymax))#,main=paste("covariance",suff,sep=""))#
    #
    up = rep(0,length(d))#
    low = rep(0,length(d))#
    up_vario = rep(0,length(d))#
    low_vario = rep(0,length(d))#
    #
    for(i in 1:nchains) {#
        #
        ma = apply(params[[i]],2,median)#
        med_cov = cov_func(d,ma[1],ma[2],ma[3],ma[4] )#
        #
        ma = apply(params[[i]],2,mean)#
        mean_cov = cov_func(d,ma[1],ma[2],ma[3],ma[4])#
    #
        pos_up = nrow(params[[i]])*((100-CI)/100/2)#
        pos_low = nrow(params[[i]])-pos_up#
    #
        for(j in 1:length(d)) {#
            cov =  sort( cov_func(d[j],params[[i]][,1], params[[i]][,2], params[[i]][,3], params[[i]][,4]) )#
            #
            up[j] = cov[pos_up]#
            low[j] = cov[pos_low]#
            #
            up_vario[j] = up[1]-cov[pos_low]#
            low_vario[j] = low[1]-cov[pos_up]#
        }#
        #
        if (variog) {#
            med_vario = med_cov[1]-med_cov#
            #
            lines(d,med_vario,col=i)#
            #
            lines(d,up_vario,col=i,lty=2)#
            lines(d,low_vario,col=i,lty=2)#
        } else {#
            lines(d,med_cov,col=i)#
#
            lines(d,up,col=i,lty=2)#
            lines(d,low,col=i,lty=2)#
        }#
    }
CI=95
   #
    if (inherits(params,"mcmc.list")) {#
        nchains = length(m)#
    } else {#
        nchains = 1#
        params = list(params)#
    }#
    #
    #
    ymax = round(2*sum(summary(params)$quantiles[,3]),1)#
    ymax = 4#
    plot(0,0,type='n',xlab="Distance",ylab="cov",xlim=range(d),ylim=c(0,ymax))#,main=paste("covariance",suff,sep=""))#
    #
    up = rep(0,length(d))#
    low = rep(0,length(d))#
    up_vario = rep(0,length(d))#
    low_vario = rep(0,length(d))#
    #
    for(i in 1:nchains) {#
        #
        ma = apply(params[[i]],2,median)#
        med_cov = cov_func(d,ma[1],ma[2],ma[3],ma[4] )#
        #
        ma = apply(params[[i]],2,mean)#
        mean_cov = cov_func(d,ma[1],ma[2],ma[3],ma[4])#
    #
        pos_up = nrow(params[[i]])*((100-CI)/100/2)#
        pos_low = nrow(params[[i]])-pos_up#
    #
        for(j in 1:length(d)) {#
            cov =  sort( cov_func(d[j],params[[i]][,1], params[[i]][,2], params[[i]][,3], params[[i]][,4]) )#
            #
            up[j] = cov[pos_up]#
            low[j] = cov[pos_low]#
            #
            up_vario[j] = up[1]-cov[pos_low]#
            low_vario[j] = low[1]-cov[pos_up]#
        }#
        #
        if (variog) {#
            med_vario = med_cov[1]-med_cov#
            #
            lines(d,med_vario,col=i)#
            #
            lines(d,up_vario,col=i,lty=2)#
            lines(d,low_vario,col=i,lty=2)#
        } else {#
            lines(d,med_cov,col=i)#
#
            lines(d,up,col=i,lty=2)#
            lines(d,low,col=i,lty=2)#
        }#
    }
variog=FALSE
   #
    if (inherits(params,"mcmc.list")) {#
        nchains = length(m)#
    } else {#
        nchains = 1#
        params = list(params)#
    }#
    #
    #
    ymax = round(2*sum(summary(params)$quantiles[,3]),1)#
    ymax = 4#
    plot(0,0,type='n',xlab="Distance",ylab="cov",xlim=range(d),ylim=c(0,ymax))#,main=paste("covariance",suff,sep=""))#
    #
    up = rep(0,length(d))#
    low = rep(0,length(d))#
    up_vario = rep(0,length(d))#
    low_vario = rep(0,length(d))#
    #
    for(i in 1:nchains) {#
        #
        ma = apply(params[[i]],2,median)#
        med_cov = cov_func(d,ma[1],ma[2],ma[3],ma[4] )#
        #
        ma = apply(params[[i]],2,mean)#
        mean_cov = cov_func(d,ma[1],ma[2],ma[3],ma[4])#
    #
        pos_up = nrow(params[[i]])*((100-CI)/100/2)#
        pos_low = nrow(params[[i]])-pos_up#
    #
        for(j in 1:length(d)) {#
            cov =  sort( cov_func(d[j],params[[i]][,1], params[[i]][,2], params[[i]][,3], params[[i]][,4]) )#
            #
            up[j] = cov[pos_up]#
            low[j] = cov[pos_low]#
            #
            up_vario[j] = up[1]-cov[pos_low]#
            low_vario[j] = low[1]-cov[pos_up]#
        }#
        #
        if (variog) {#
            med_vario = med_cov[1]-med_cov#
            #
            lines(d,med_vario,col=i)#
            #
            lines(d,up_vario,col=i,lty=2)#
            lines(d,low_vario,col=i,lty=2)#
        } else {#
            lines(d,med_cov,col=i)#
#
            lines(d,up,col=i,lty=2)#
            lines(d,low,col=i,lty=2)#
        }#
    }
params[[i]]
i
nchains
length(m)
